@charset "UTF-8";

/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/

body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

.wrapper {
  max-width: 1400px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
}

::-webkit-scrollbar {
  width: 5px;
  height: 0px;
}

::-webkit-scrollbar-button {
  width: 0px;
  height: 0px;
}

::-webkit-scrollbar-track {
  background-color: #363636;
  border-radius: 50px;
}

::-webkit-scrollbar-track-piece {
  background-color: #363636;
}

::-webkit-scrollbar-thumb {
  background-color: #f6d667;
  border-radius: 50px;
}

::-webkit-scrollbar-corner {
  background-color: transparent;
}

@font-face {
  font-family: 'Montserrat-Bold';
  src: url('../fonts/Montserrat/Montserrat-Bold.ttf') format('truetype'), url("../fonts/Montserrat/Montserrat-Bold.woff") format("woff"), url("../fonts/Montserrat/Montserrat-Bold.eot") format("eot");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Montserrat-Regular';
  src: url('../fonts/Montserrat/Montserrat-Regular.ttf') format('truetype'), url("../fonts/Montserrat/Montserrat-Regular.woff") format("woff"), url("../fonts/Montserrat/Montserrat-Regular.eot") format("eot");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Montserrat-Thin';
  src: url('../fonts/Montserrat/Montserrat-Thin.ttf') format('truetype'), url("../fonts/Montserrat/Montserrat-Thin.woff") format("woff"), url("../fonts/Montserrat/Montserrat-Thin.eot") format("eot");
  font-weight: normal;
  font-style: normal;
}

html:not([data-scroll='0']) header {
  background: rgba(2, 2, 2, 0.4);
  box-shadow: 0px 20px 20px rgba(0, 0, 0, 0.1);
}

body {
  font-family: 'Montserrat-Regular';
  background: #363636;
  color: #ffffff;
}

a {
  color: #ffffff;
  text-decoration: none;
}

a,
button {
  cursor: pointer;
  -webkit-transition: all 0.15s ease-in-out;
  transition: all 0.15s ease-in-out;
}

a:focus,
button:focus {
  outline: none;
}

a:hover,
button:hover {
  color: #f6d667;
}

input {
  cursor: text;
}

input:focus {
  outline: none;
}

.theme-color-1 {
  color: #f6d667;
}

.theme-color-2 {
  color: #bda042;
}

.theme-color-3 {
  color: #917c2e;
}

.debugGrid {
  height: 100vh;
  position: fixed;
  width: 100%;
  display: none;
}

.debugGrid > div {
  height: inherit;
  max-width: 1400px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
}

.debugGrid > div > div {
  height: inherit;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
}

.debugGrid > div > div > div {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 1.55%;
  margin-right: 1.55%;
  width: 21.9%;
  height: inherit;
  outline: 1px solid #ff0;
  background: rgba(0, 0, 0, 0.4);
}

.debugGrid-btn {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  position: fixed;
  right: 0;
  bottom: 0;
  width: 50px;
  height: 50px;
  border: 1px solid #ff0;
  border-radius: 50%;
  z-index: 1;
  background: rgba(0, 0, 0, 0.4);
}

.debugGrid-btn__hidden {
  display: none;
}

.debugGrid-btn:before,
.debugGrid-btn:after {
  content: '';
  align-self: center;
  background: #000;
}

.debugGrid-btn:before {
  width: 25px;
  height: 2px;
}

.debugGrid-btn__create:after {
  width: 2px;
  height: 25px;
  position: absolute;
}

.debugGrid__z-index-negative {
  z-index: -1;
}

.header {
  position: -webkit-sticky;
  position: sticky;
  text-align: left;
  top: 0;
  color: #ffffff;
  padding: 12px 0;
  z-index: 1;
  -webkit-transition: all 0.35s ease-in-out;
  transition: all 0.35s ease-in-out;
}

.header-content {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
}

.header__logo {
  width: 21.9%;
}

.header__navbar {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
  width: 96.9%;
}

.header__navbar-link {
  width: 21.9%;
}

.header__navbar-link:not(:first-child) {
  font-weight: 200;
  font-size: 16px;
  line-height: 31px;
  letter-spacing: 2px;
  text-transform: lowercase;
  font-style: normal;
}

.header .page__subtitle {
  font-size: 20px;
  line-height: 24px;
}

.banner {
  position: relative;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-pack: center;
          justify-content: center;
}

.banner__logo {
  position: absolute;
}

.banner .page__subtitle {
  padding-bottom: 18px;
  font-size: 30px;
  line-height: 37px;
}

.banner .page__subtitle,
.banner .page__img {
  width: 90%;
  margin: 0 auto;
}

.canvas {
  left: 0;
  top: 0;
}

.bg {
  height: 100%;
  width: 100%;
  position: absolute;
  z-index: -1;
}

.bg .wrapper {
  height: inherit;
}

.bg-grid {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
  height: inherit;
}

.bg-grid__line {
  width: 21.9%;
  position: relative;
}

.bg-grid__line::before {
  content: "";
}

.bg-grid__line::before,
.bg-grid__line::after {
  background: rgba(255, 255, 255, 0.1);
  width: 1px;
  height: 100%;
  position: absolute;
  top: 0;
}

.bg-grid__line:last-child::after {
  content: "";
  right: 0;
}

.page {
  position: relative;
  background: #363636;
  z-index: 1;
  height: 100%;
  min-height: 100vh;
  box-shadow: 0px 20px 20px rgba(0, 0, 0, 0.1);
  -webkit-transition: all 0.35s;
  transition: all 0.35s;
}

.page__content {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: start;
          align-items: flex-start;
}

.page__title {
  position: relative;
}

.page__title_main {
  position: absolute;
  width: 100%;
  margin: 0 auto;
  bottom: 20px;
}

.page__title-h2 {
  font-size: 40px;
  line-height: 49px;
}

.page__title-h3 {
  font-size: 18px;
  text-transform: uppercase;
}

.page__subtitle {
  font-style: normal;
  font-weight: 200;
  letter-spacing: 2px;
}

.page__subtitle_big {
  font-family: 'Montserrat-Thin';
  color: #464646;
  font-size: 120px;
  line-height: 146px;
}

.page__text {
  font-size: 16px;
  line-height: 28px;
  letter-spacing: 1px;
}

.page__copyright {
  color: #707070;
  font-size: 12px;
  line-height: 15px;
}

.page__btn {
  color: #ffffff;
  background: transparent;
  border: 1px solid #ffffff;
  font-weight: 200;
  font-size: 16px;
  line-height: 20px;
  letter-spacing: 2px;
  text-transform: lowercase;
  padding: 14px 35px;
}

.page__btn:hover {
  border: 1px solid #f6d667;
}

.page__icon_mouse-down {
  display: -webkit-box;
  display: flex;
}

.page__icon_mouse-down::before {
  content: "";
  background-image: url(../assets/icons/sprite.png);
  background-position: 0px 0px;
  width: 25px;
  height: 53px;
}

.page__figure {
  position: relative;
  margin: 0;
  min-height: 262px;
}

.page__figure:hover .page__img {
  opacity: 0.19;
}

.page__figure:hover .page__title-h3 {
  -webkit-transform: translate3d(0, 10px, 0);
          transform: translate3d(0, 10px, 0);
}

.page__figure:hover .page__btn {
  -webkit-transform: translate3d(0, -10px, 0);
          transform: translate3d(0, -10px, 0);
}

.page__figure:hover .page__title-h3,
.page__figure:hover .page__text,
.page__figure:hover .page__btn {
  opacity: 1;
}

.page__figure:hover .page__figcaption::before,
.page__figure:hover .page__figcaption::after {
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}

.page__figure .page__img {
  opacity: 0.6;
  -webkit-transition: opacity 0.5s;
  transition: opacity 0.5s;
}

.page__figcaption {
  position: absolute;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-pack: space-evenly;
          justify-content: space-evenly;
  text-align: center;
  height: 100%;
  top: 0;
  min-width: 308px;
  padding: 0px 14px;
}

.page__figcaption::before,
.page__figcaption::after {
  content: "";
  position: absolute;
  top: 15px;
  right: 15px;
  bottom: 15px;
  left: 15px;
  opacity: 0;
  -webkit-transform: scale(1, 0);
          transform: scale(1, 0);
  transition: opacity 0.8s, -webkit-transform 0.8s;
  -webkit-transition: opacity 0.8s, -webkit-transform 0.8s;
  transition: opacity 0.8s, transform 0.8s;
  transition: opacity 0.8s, transform 0.8s, -webkit-transform 0.8s;
}

.page__figcaption::before {
  border-top: 1px solid #ffffff;
  border-bottom: 1px solid #ffffff;
}

.page__figcaption::after {
  border-right: 1px solid #ffffff;
  border-left: 1px solid #ffffff;
}

.page__figcaption .page__title-h3,
.page__figcaption .page__text,
.page__figcaption .page__btn {
  opacity: 0;
  -webkit-transition: all 0.35s;
  transition: all 0.35s;
}

.page__figcaption .page__text {
  overflow: hidden;
  font-size: 14px;
}

.page__figcaption .page__btn {
  z-index: 1;
}

.page__toogle {
  text-align: center;
}

.page__link {
  display: inline-block;
  width: 100%;
  letter-spacing: 2px;
}

.page__link_active {
  color: #f6d667;
  text-decoration: underline;
}

.page__link_site {
  width: auto;
  padding: 8px 12px;
  background-color: #f6d667;
  color: #000000;
  font-weight: 600;
}

.page__link_site:hover {
  color: #000000;
  background-color: #bda042;
}

.page__list {
  padding-left: 26px;
}

.page__list_text {
  padding-bottom: 16px;
  list-style: disc;
}

.page__list_text .page__list {
  padding-left: 0;
  display: -webkit-box;
  display: flex;
  padding-top: 10px;
}

.page__list_icon {
  width: 30px;
}

.page__list_icon:not(:last-child) {
  padding-right: 12px;
}

.page_flex {
  display: -webkit-box;
  display: flex;
}

.page_bold {
  font-family: 'Montserrat-Bold';
}

.page_transform-uppercase {
  text-transform: uppercase;
}

.page_text-center {
  text-align: center;
}

.page_padding-bottom-25 {
  padding-bottom: 25px;
}

.page_padding-bottom-40 {
  padding-bottom: 40px;
}

.page_hidden {
  display: none !important;
}

.page_overflow-hidden {
  overflow: hidden;
  margin-right: 5px;
}

/* Tabs */

.tab {
  /* Tab Content */
}

.tab-link.is-active {
  color: #f6d667;
}

.tab-content {
  display: none;
}

.tab-content.is-active {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
}

.modal {
  position: fixed;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  width: 100%;
  height: 100%;
  min-height: 100%;
  top: 0px;
  z-index: 1;
}

.modal-callback {
  background: rgba(39, 39, 39, 0.6);
}

.modal-callback .modal__content {
  color: #ffffff;
  background-color: #363636;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  padding: 50px 80px;
  max-width: 450px;
}

.modal-callback .modal__content .page__text {
  font-size: 16px;
  text-align: center;
}

.modal-callback .modal__content .page__link {
  display: inline;
}

.modal-callback .modal__content .page__link:hover {
  color: #917c2e;
}

.modal__action {
  position: relative;
}

.modal__action .page__btn {
  position: absolute;
  top: -22px;
  right: -22px;
}

.modal__action .page__btn_circle {
  border-radius: 100%;
  padding: 2px 6px  2px 7px;
}

.modal__action .page__btn_close::before {
  content: "x";
}

.social {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
}

.social__item-link {
  margin-right: 20px;
}

.social__item-link .page__img {
  cursor: pointer;
}

.social__item-link .page__img:hover,
.social__item-link .page__img:focus {
  -webkit-filter: invert(0%) sepia(77%) saturate(4338%) hue-rotate(309deg) brightness(110%) contrast(96%);
          filter: invert(0%) sepia(77%) saturate(4338%) hue-rotate(309deg) brightness(110%) contrast(96%);
}

.skills {
  padding: 80px 0;
  margin-top: 190px;
}

.skills-content {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
  padding: 40px 120px;
  -webkit-box-pack: justify;
          justify-content: space-between;
}

.skills-content .skill {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-pack: justify;
          justify-content: space-between;
  padding: 20px 18px;
  min-width: 110px;
}

.skills-content .skill .page__img {
  padding-top: 5%;
}

.skills-content .skill .page__subtitle {
  padding-top: 10px;
}

.services {
  padding: 80px 0;
  margin-top: 190px;
}

.services-content {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
  padding: 20px 0;
}

.services-content .service {
  width: 21.9%;
  position: relative;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-pack: justify;
          justify-content: space-between;
  padding: 40px 0;
  -webkit-transition: opacity 0.5s ease;
  transition: opacity 0.5s ease;
  overflow: hidden;
}

.services-content .service .page__subtitle {
  padding-top: 10px;
}

.services-content .service:hover {
  background: #313131;
}

.services-content .service:hover .page__img,
.services-content .service:hover .page__subtitle {
  opacity: 0;
}

.services-content .service:hover .page__description {
  opacity: 1;
  top: 0;
  height: 100%;
}

.services-content .service:hover .page__description .page__subtitle {
  opacity: 1;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  font-size: 20px;
  line-height: 24px;
}

.services-content .service:hover .page__description .page__subtitle::after {
  content: "";
  width: 71px;
  height: 2px;
  margin: 16px auto 25px;
  background: #f6d667;
}

.services-content .service .page__description {
  opacity: 0;
  position: absolute;
}

.advantages {
  padding: 80px 0;
  margin-top: 190px;
  background-color: #f6d667;
}

.advantages-content {
  color: #000000;
}

.advantages-content .page__lists {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
  counter-reset: section;
  list-style-type: none;
}

.advantages-content .page__lists .page__list-item {
  width: 21.9%;
  padding: 40px 0;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  font-size: 20px;
  line-height: 24px;
}

.advantages-content .page__lists .page__list-item::before {
  counter-increment: section;
  content: counters(section, ".") " ";
  font-weight: 500;
  font-size: 60px;
  line-height: 73px;
  color: #363636;
}

.advantages-content .page__lists .page__list-item .page__line_before {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  padding-right: 10%;
}

.advantages-content .page__lists .page__list-item .page__line_before::before {
  content: "";
  width: 40px;
  height: 1px;
  margin: 0 14px;
  background-color: #363636;
}

.advantages .page__subtitle_main {
  color: #464646;
}

.projects {
  padding: 80px 0;
}

.projects-content {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
  padding: 20px 0;
}

.projects-content .project {
  width: 20.9%;
  margin: 0 7px;
}

.projects-content .project:hover {
  background: #313131;
}

.projects .page__btn {
  max-width: 180px;
  margin: 0 auto;
}

.project:hover .page__figcaption::before {
  border-top: 1px solid #f6d667 !important;
  border-bottom: 1px solid #f6d667 !important;
}

.project:hover .page__figcaption::after {
  border-right: 1px solid #f6d667 !important;
  border-left: 1px solid #f6d667 !important;
}

.about {
  padding: 80px 0;
}

.about-content {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
}

.about-content .page__img {
  width: 46.9%;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
}

.about-content .page__content {
  width: 46.9%;
}

.footer {
  position: -webkit-sticky;
  position: sticky;
  bottom: 0;
  padding: 50px 0;
}

.footer-content {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
}

.footer-content__item {
  width: 21.9%;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-pack: justify;
          justify-content: space-between;
}

.project-page-content {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -1.55%;
  margin-right: -1.55%;
  padding-bottom: 25px;
}

.project-page-content .page__title {
  width: 100%;
}

.project-page-content .page__subtitle_big {
  font-size: 60px;
  line-height: 150px;
  color: #707070;
}

.project-page-content__description {
  width: 71.9%;
}

.project-page-content__description .page__text {
  font-size: 18px;
  line-height: 24px;
  padding-right: 50px;
  letter-spacing: 1px;
}

.project-page-content__info {
  width: 21.9%;
}

.project-info {
  position: -webkit-sticky;
  position: sticky;
  top: 85px;
  padding-left: 25px;
}

.project-info__element {
  padding: 0 0 30px;
}

.project-info__element .page__title-h3 {
  padding-bottom: 12px;
}

.project-info__element_list .tab-link {
  cursor: pointer;
  display: inline-block;
  width: 100%;
  letter-spacing: 2px;
  position: relative;
  padding-left: 25px;
  line-height: 22px;
}

.project-info__element_list .tab-link::before {
  content: "\203A";
  position: absolute;
  top: -1px;
  left: 8px;
  width: 14px;
  height: 19px;
}

.project-info__element .page__text {
  font-size: 14px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
